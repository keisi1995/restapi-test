service: restapi-test

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  memorySize: 128
  timeout: 10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        - !GetAtt Cache.Arn
        - !GetAtt Log.Arn
        - !GetAtt User.Arn
        - !Sub "${Cache.Arn}/index/IDCharacterIndex"
        - !Sub "${Log.Arn}/index/IDCharacterIndex"
        - !Sub "${User.Arn}/index/EmailUserIndex"

package:
  individually: true

functions:
  fusionados:
    handler: src/controllers/logController.fusionados
    events:
      - httpApi: GET /fusionados/{id}
          
  almacenar:
    handler: src/controllers/logController.almacenar
    events:
      - httpApi: POST /almacenar

  historial:
    handler: src/controllers/logController.historial
    events:
      - httpApi: GET /historial

  registerUser:
    handler: src/controllers/authController.register
    events:
      - httpApi: POST /account/register

  loginUser:
    handler: src/controllers/authController.login
    events:
      - httpApi: POST /account/login
  
resources:
  Resources:
    Cache:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.cacheTableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: id_character
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

        GlobalSecondaryIndexes:
          - IndexName: IDCharacterIndex
            KeySchema:
              - AttributeName: id_character
                KeyType: HASH
            Projection:
              ProjectionType: ALL

        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
          
    Log:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.logTableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: id_character
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
            
        GlobalSecondaryIndexes:
          - IndexName: IDCharacterIndex
            KeySchema:
              - AttributeName: id_character
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    User:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.UserTableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailUserIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL

custom:
  cacheTableName: Cache
  logTableName: Log
  UserTableName: User

plugins:
  - serverless-offline
  - serverless-plugin-typescript
